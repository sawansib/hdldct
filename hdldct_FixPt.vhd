-- -------------------------------------------------------------
-- 
-- File Name: G:\AI\IIT BHU\codegen\hdldct\hdlsrc\hdldct_FixPt.vhd
-- Created: 2016-06-28 15:28:39
-- 
-- Generated by MATLAB 8.1, MATLAB Coder 2.4 and HDL Coder 3.2
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- d                             ce_out        1
-- Y1                            ce_out        1
-- Y3                            ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: hdldct_FixPt
-- Source Path: hdldct_FixPt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.hdldct_FixPt_pkg.ALL;

ENTITY hdldct_FixPt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        i                                 :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        j                                 :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        m                                 :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        n                                 :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        x0                                :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        x1                                :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        x2                                :   IN    std_logic;  -- ufix1
        x3                                :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;
        d                                 :   OUT   std_logic_vector(7 DOWNTO 0);  -- sfix8
        Y1                                :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
        Y3                                :   OUT   std_logic_vector(7 DOWNTO 0)  -- sfix8
        );
END hdldct_FixPt;


ARCHITECTURE rtl OF hdldct_FixPt IS

  -- Constants
  CONSTANT nc                             : vector_of_signed16(0 TO 255) := ( to_signed(32767, 16), to_signed(32758, 16), to_signed(32729, 16), to_signed(32679, 16), 
                                                                            to_signed(32610, 16), to_signed(32522, 16), to_signed(32413, 16), to_signed(32286, 16), 
                                                                            to_signed(32138, 16), to_signed(31972, 16), to_signed(31786, 16), to_signed(31581, 16), 
                                                                            to_signed(31357, 16), to_signed(31114, 16), to_signed(30853, 16), to_signed(30572, 16), 
                                                                            to_signed(30274, 16), to_signed(29957, 16), to_signed(29622, 16), to_signed(29269, 16), 
                                                                            to_signed(28899, 16), to_signed(28511, 16), to_signed(28106, 16), to_signed(27684, 16), 
                                                                            to_signed(27246, 16), to_signed(26791, 16), to_signed(26320, 16), to_signed(25833, 16), 
                                                                            to_signed(25330, 16), to_signed(24812, 16), to_signed(24279, 16), to_signed(23732, 16), 
                                                                            to_signed(23170, 16), to_signed(22595, 16), to_signed(22006, 16), to_signed(21403, 16), 
                                                                            to_signed(20788, 16), to_signed(20160, 16), to_signed(19520, 16), to_signed(18868, 16), 
                                                                            to_signed(18205, 16), to_signed(17531, 16), to_signed(16846, 16), to_signed(16151, 16), 
                                                                            to_signed(15447, 16), to_signed(14733, 16), to_signed(14010, 16), to_signed(13279, 16), 
                                                                            to_signed(12540, 16), to_signed(11793, 16), to_signed(11039, 16), to_signed(10279, 16), 
                                                                            to_signed(9512, 16), to_signed(8740, 16), to_signed(7962, 16), to_signed(7180, 16), 
                                                                            to_signed(6393, 16), to_signed(5602, 16), to_signed(4808, 16), to_signed(4011, 16), 
                                                                            to_signed(3212, 16), to_signed(2411, 16), to_signed(1608, 16), to_signed(804, 16), to_signed(0, 16), 
                                                                            to_signed(-804, 16), to_signed(-1608, 16), to_signed(-2411, 16), to_signed(-3212, 16), 
                                                                            to_signed(-4011, 16), to_signed(-4808, 16), to_signed(-5602, 16), to_signed(-6393, 16), 
                                                                            to_signed(-7180, 16), to_signed(-7962, 16), to_signed(-8740, 16), to_signed(-9512, 16), 
                                                                            to_signed(-10279, 16), to_signed(-11039, 16), to_signed(-11793, 16), to_signed(-12540, 16), 
                                                                            to_signed(-13279, 16), to_signed(-14010, 16), to_signed(-14733, 16), to_signed(-15447, 16), 
                                                                            to_signed(-16151, 16), to_signed(-16846, 16), to_signed(-17531, 16), to_signed(-18205, 16), 
                                                                            to_signed(-18868, 16), to_signed(-19520, 16), to_signed(-20160, 16), to_signed(-20788, 16), 
                                                                            to_signed(-21403, 16), to_signed(-22006, 16), to_signed(-22595, 16), to_signed(-23170, 16), 
                                                                            to_signed(-23732, 16), to_signed(-24279, 16), to_signed(-24812, 16), to_signed(-25330, 16), 
                                                                            to_signed(-25833, 16), to_signed(-26320, 16), to_signed(-26791, 16), to_signed(-27246, 16), 
                                                                            to_signed(-27684, 16), to_signed(-28106, 16), to_signed(-28511, 16), to_signed(-28899, 16), 
                                                                            to_signed(-29269, 16), to_signed(-29622, 16), to_signed(-29957, 16), to_signed(-30274, 16), 
                                                                            to_signed(-30572, 16), to_signed(-30853, 16), to_signed(-31114, 16), to_signed(-31357, 16), 
                                                                            to_signed(-31581, 16), to_signed(-31786, 16), to_signed(-31972, 16), to_signed(-32138, 16), 
                                                                            to_signed(-32286, 16), to_signed(-32413, 16), to_signed(-32522, 16), to_signed(-32610, 16), 
                                                                            to_signed(-32679, 16), to_signed(-32729, 16), to_signed(-32758, 16), to_signed(-32767, 16), 
                                                                            to_signed(-32758, 16), to_signed(-32729, 16), to_signed(-32679, 16), to_signed(-32610, 16), 
                                                                            to_signed(-32522, 16), to_signed(-32413, 16), to_signed(-32286, 16), to_signed(-32138, 16), 
                                                                            to_signed(-31972, 16), to_signed(-31786, 16), to_signed(-31581, 16), to_signed(-31357, 16), 
                                                                            to_signed(-31114, 16), to_signed(-30853, 16), to_signed(-30572, 16), to_signed(-30274, 16), 
                                                                            to_signed(-29957, 16), to_signed(-29622, 16), to_signed(-29269, 16), to_signed(-28899, 16), 
                                                                            to_signed(-28511, 16), to_signed(-28106, 16), to_signed(-27684, 16), to_signed(-27246, 16), 
                                                                            to_signed(-26791, 16), to_signed(-26320, 16), to_signed(-25833, 16), to_signed(-25330, 16), 
                                                                            to_signed(-24812, 16), to_signed(-24279, 16), to_signed(-23732, 16), to_signed(-23170, 16), 
                                                                            to_signed(-22595, 16), to_signed(-22006, 16), to_signed(-21403, 16), to_signed(-20788, 16), 
                                                                            to_signed(-20160, 16), to_signed(-19520, 16), to_signed(-18868, 16), to_signed(-18205, 16), 
                                                                            to_signed(-17531, 16), to_signed(-16846, 16), to_signed(-16151, 16), to_signed(-15447, 16), 
                                                                            to_signed(-14733, 16), to_signed(-14010, 16), to_signed(-13279, 16), to_signed(-12540, 16), 
                                                                            to_signed(-11793, 16), to_signed(-11039, 16), to_signed(-10279, 16), to_signed(-9512, 16), 
                                                                            to_signed(-8740, 16), to_signed(-7962, 16), to_signed(-7180, 16), to_signed(-6393, 16), 
                                                                            to_signed(-5602, 16), to_signed(-4808, 16), to_signed(-4011, 16), to_signed(-3212, 16), 
                                                                            to_signed(-2411, 16), to_signed(-1608, 16), to_signed(-804, 16), to_signed(0, 16), to_signed(804, 16), 
                                                                            to_signed(1608, 16), to_signed(2411, 16), to_signed(3212, 16), to_signed(4011, 16), 
                                                                            to_signed(4808, 16), to_signed(5602, 16), to_signed(6393, 16), to_signed(7180, 16), 
                                                                            to_signed(7962, 16), to_signed(8740, 16), to_signed(9512, 16), to_signed(10279, 16), 
                                                                            to_signed(11039, 16), to_signed(11793, 16), to_signed(12540, 16), to_signed(13279, 16), 
                                                                            to_signed(14010, 16), to_signed(14733, 16), to_signed(15447, 16), to_signed(16151, 16), 
                                                                            to_signed(16846, 16), to_signed(17531, 16), to_signed(18205, 16), to_signed(18868, 16), 
                                                                            to_signed(19520, 16), to_signed(20160, 16), to_signed(20788, 16), to_signed(21403, 16), 
                                                                            to_signed(22006, 16), to_signed(22595, 16), to_signed(23170, 16), to_signed(23732, 16), 
                                                                            to_signed(24279, 16), to_signed(24812, 16), to_signed(25330, 16), to_signed(25833, 16), 
                                                                            to_signed(26320, 16), to_signed(26791, 16), to_signed(27246, 16), to_signed(27684, 16), 
                                                                            to_signed(28106, 16), to_signed(28511, 16), to_signed(28899, 16), to_signed(29269, 16), 
                                                                            to_signed(29622, 16), to_signed(29957, 16), to_signed(30274, 16), to_signed(30572, 16), 
                                                                            to_signed(30853, 16), to_signed(31114, 16), to_signed(31357, 16), to_signed(31581, 16), 
                                                                            to_signed(31786, 16), to_signed(31972, 16), to_signed(32138, 16), to_signed(32286, 16), 
                                                                            to_signed(32413, 16), to_signed(32522, 16), to_signed(32610, 16), to_signed(32679, 16), 
                                                                            to_signed(32729, 16), to_signed(32758, 16) );  -- sfix16 [256]
  CONSTANT One                            : unsigned(3 DOWNTO 0) := to_unsigned(8, 4);  -- ufix4
  CONSTANT C_divbyzero_p                  : unsigned(3 DOWNTO 0) := to_unsigned(15, 4);  -- ufix4
  CONSTANT c_divbyzero_p_0                : unsigned(10 DOWNTO 0) := to_unsigned(2047, 11);  -- ufix11

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL i_unsigned                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL j_unsigned                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL m_unsigned                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL n_unsigned                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL x0_unsigned                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL x1_unsigned                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL d_tmp                            : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL Y1_tmp                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Y3_tmp                           : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL hdldct_FixPt_FI_SIN_COS_LUT      : vector_of_signed16(0 TO 255);  -- sfix16 [256]

BEGIN
  i_unsigned <= unsigned(i);

  j_unsigned <= unsigned(j);

  m_unsigned <= unsigned(m);

  n_unsigned <= unsigned(n);

  x0_unsigned <= unsigned(x0);

  x1_unsigned <= unsigned(x1);

  enb <= clk_enable;

  hdldct_FixPt_1_output : PROCESS (i_unsigned, j_unsigned, m_unsigned, n_unsigned, x0_unsigned, x1_unsigned, x2, x3)
    VARIABLE FI_SIN_COS_LUT : vector_of_signed16(0 TO 255);
    VARIABLE t3 : unsigned(13 DOWNTO 0);
    VARIABLE inputValue : unsigned(15 DOWNTO 0);
    VARIABLE iA : unsigned(31 DOWNTO 0);
    VARIABLE inputvalue_0 : unsigned(15 DOWNTO 0);
    VARIABLE ia_0 : unsigned(31 DOWNTO 0);
    VARIABLE d1 : unsigned(1 DOWNTO 0);
    VARIABLE d2 : unsigned(1 DOWNTO 0);
    VARIABLE tmp : unsigned(15 DOWNTO 0);
    VARIABLE fullScaleIndex : unsigned(15 DOWNTO 0);
    VARIABLE idxLUTLoZero : unsigned(7 DOWNTO 0);
    VARIABLE idxLUTLoAddr : signed(15 DOWNTO 0);
    VARIABLE temp : signed(15 DOWNTO 0);
    VARIABLE c : signed(39 DOWNTO 0);
    VARIABLE tmp_0 : signed(10 DOWNTO 0);
    VARIABLE c1 : unsigned(4 DOWNTO 0);
    VARIABLE ytemp : unsigned(2 DOWNTO 0);
    VARIABLE y : unsigned(2 DOWNTO 0);
    VARIABLE ytempPlusLsb : unsigned(2 DOWNTO 0);
    VARIABLE tmp_1 : unsigned(15 DOWNTO 0);
    VARIABLE fullscaleindex_0 : unsigned(15 DOWNTO 0);
    VARIABLE idxlutlozero_0 : unsigned(7 DOWNTO 0);
    VARIABLE idxlutloaddr_0 : signed(15 DOWNTO 0);
    VARIABLE temp_0 : signed(15 DOWNTO 0);
    VARIABLE c_0 : signed(29 DOWNTO 0);
    VARIABLE tmp_2 : signed(11 DOWNTO 0);
    VARIABLE div_temp : unsigned(10 DOWNTO 0);
    VARIABLE div_temp_0 : unsigned(3 DOWNTO 0);
    VARIABLE div_temp_1 : unsigned(31 DOWNTO 0);
    VARIABLE div_temp_2 : unsigned(31 DOWNTO 0);
    VARIABLE cast : unsigned(4 DOWNTO 0);
    VARIABLE sub_cast : unsigned(4 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(6 DOWNTO 0);
    VARIABLE sub_temp : signed(6 DOWNTO 0);
    VARIABLE cast_0 : unsigned(5 DOWNTO 0);
    VARIABLE cast_1 : unsigned(10 DOWNTO 0);
    VARIABLE cast_2 : unsigned(4 DOWNTO 0);
    VARIABLE sub_temp_0 : unsigned(3 DOWNTO 0);
    VARIABLE mul_temp : unsigned(7 DOWNTO 0);
    VARIABLE cast_3 : unsigned(13 DOWNTO 0);
    VARIABLE cast_4 : unsigned(13 DOWNTO 0);
    VARIABLE mul_temp_0 : unsigned(27 DOWNTO 0);
    VARIABLE cast_5 : unsigned(31 DOWNTO 0);
    VARIABLE cast_6 : unsigned(31 DOWNTO 0);
    VARIABLE sub_cast_1 : unsigned(31 DOWNTO 0);
    VARIABLE sub_temp_1 : unsigned(31 DOWNTO 0);
    VARIABLE cast_7 : unsigned(15 DOWNTO 0);
    VARIABLE mul_temp_1 : unsigned(47 DOWNTO 0);
    VARIABLE cast_8 : unsigned(31 DOWNTO 0);
    VARIABLE add_cast : unsigned(7 DOWNTO 0);
    VARIABLE add_cast_0 : signed(15 DOWNTO 0);
    VARIABLE add_cast_1 : unsigned(3 DOWNTO 0);
    VARIABLE add_temp : unsigned(3 DOWNTO 0);
    VARIABLE cast_9 : vector_of_unsigned8(0 TO 2);
    VARIABLE sll_temp : vector_of_unsigned3(0 TO 2);
    VARIABLE cast_10 : signed(8 DOWNTO 0);
    VARIABLE add_cast_2 : unsigned(7 DOWNTO 0);
    VARIABLE add_cast_3 : signed(15 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(31 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(31 DOWNTO 0);
    VARIABLE sub_temp_2 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_2 : signed(40 DOWNTO 0);
    VARIABLE cast_11 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_3 : unsigned(5 DOWNTO 0);
    VARIABLE sub_cast_4 : signed(6 DOWNTO 0);
    VARIABLE sub_cast_5 : signed(6 DOWNTO 0);
    VARIABLE sub_temp_3 : signed(6 DOWNTO 0);
    VARIABLE cast_12 : unsigned(5 DOWNTO 0);
    VARIABLE sub_cast_6 : signed(6 DOWNTO 0);
    VARIABLE mul_temp_4 : unsigned(5 DOWNTO 0);
    VARIABLE sub_cast_7 : signed(6 DOWNTO 0);
    VARIABLE sub_temp_4 : signed(6 DOWNTO 0);
    VARIABLE cast_13 : unsigned(5 DOWNTO 0);
    VARIABLE mul_temp_5 : vector_of_unsigned6(0 TO 2);
    VARIABLE cast_14 : vector_of_unsigned6(0 TO 2);
    VARIABLE add_cast_4 : signed(31 DOWNTO 0);
    VARIABLE add_cast_5 : signed(31 DOWNTO 0);
    VARIABLE add_temp_0 : signed(31 DOWNTO 0);
    VARIABLE cast_15 : signed(15 DOWNTO 0);
    VARIABLE mul_temp_6 : signed(31 DOWNTO 0);
    VARIABLE cast_16 : signed(8 DOWNTO 0);
    VARIABLE mul_temp_7 : signed(40 DOWNTO 0);
    VARIABLE add_cast_6 : signed(31 DOWNTO 0);
    VARIABLE add_cast_7 : signed(31 DOWNTO 0);
    VARIABLE add_temp_1 : signed(31 DOWNTO 0);
    VARIABLE cast_17 : signed(15 DOWNTO 0);
    VARIABLE mul_temp_8 : signed(31 DOWNTO 0);
    VARIABLE cast_18 : signed(8 DOWNTO 0);
    VARIABLE mul_temp_9 : signed(40 DOWNTO 0);
    VARIABLE cast_19 : signed(39 DOWNTO 0);
    VARIABLE add_cast_8 : signed(11 DOWNTO 0);
    VARIABLE add_cast_9 : signed(12 DOWNTO 0);
    VARIABLE add_temp_2 : signed(12 DOWNTO 0);
    VARIABLE cast_20 : signed(11 DOWNTO 0);
    VARIABLE sub_cast_8 : signed(11 DOWNTO 0);
    VARIABLE sub_cast_9 : signed(12 DOWNTO 0);
    VARIABLE sub_temp_5 : signed(12 DOWNTO 0);
    VARIABLE cast_21 : signed(11 DOWNTO 0);
    VARIABLE cast_22 : signed(11 DOWNTO 0);
    VARIABLE sub_cast_10 : unsigned(3 DOWNTO 0);
    VARIABLE cast_23 : unsigned(1 DOWNTO 0);
    VARIABLE cast_24 : signed(15 DOWNTO 0);
    VARIABLE sub_cast_11 : unsigned(3 DOWNTO 0);
    VARIABLE cast_25 : unsigned(1 DOWNTO 0);
    VARIABLE cast_26 : signed(15 DOWNTO 0);
    VARIABLE sub_cast_12 : unsigned(31 DOWNTO 0);
    VARIABLE sub_temp_6 : unsigned(31 DOWNTO 0);
    VARIABLE cast_27 : unsigned(15 DOWNTO 0);
    VARIABLE mul_temp_10 : unsigned(47 DOWNTO 0);
    VARIABLE cast_28 : unsigned(31 DOWNTO 0);
    VARIABLE add_cast_10 : unsigned(7 DOWNTO 0);
    VARIABLE add_cast_11 : signed(15 DOWNTO 0);
    VARIABLE cast_29 : unsigned(8 DOWNTO 0);
    VARIABLE cast_30 : signed(8 DOWNTO 0);
    VARIABLE add_cast_12 : unsigned(7 DOWNTO 0);
    VARIABLE add_cast_13 : signed(15 DOWNTO 0);
    VARIABLE sub_cast_13 : signed(31 DOWNTO 0);
    VARIABLE sub_cast_14 : signed(31 DOWNTO 0);
    VARIABLE sub_temp_7 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_11 : signed(40 DOWNTO 0);
    VARIABLE cast_31 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_12 : unsigned(5 DOWNTO 0);
    VARIABLE cast_32 : signed(6 DOWNTO 0);
    VARIABLE add_cast_14 : signed(31 DOWNTO 0);
    VARIABLE add_cast_15 : signed(31 DOWNTO 0);
    VARIABLE add_temp_3 : signed(31 DOWNTO 0);
    VARIABLE cast_33 : signed(15 DOWNTO 0);
    VARIABLE mul_temp_13 : signed(22 DOWNTO 0);
    VARIABLE cast_34 : signed(21 DOWNTO 0);
    VARIABLE cast_35 : signed(8 DOWNTO 0);
    VARIABLE mul_temp_14 : signed(30 DOWNTO 0);
    VARIABLE mul_temp_15 : unsigned(5 DOWNTO 0);
    VARIABLE cast_36 : signed(6 DOWNTO 0);
    VARIABLE add_cast_16 : signed(31 DOWNTO 0);
    VARIABLE add_cast_17 : signed(31 DOWNTO 0);
    VARIABLE add_temp_4 : signed(31 DOWNTO 0);
    VARIABLE cast_37 : signed(15 DOWNTO 0);
    VARIABLE mul_temp_16 : signed(22 DOWNTO 0);
    VARIABLE cast_38 : signed(21 DOWNTO 0);
    VARIABLE cast_39 : signed(8 DOWNTO 0);
    VARIABLE mul_temp_17 : signed(30 DOWNTO 0);
    VARIABLE cast_40 : signed(29 DOWNTO 0);
    VARIABLE add_cast_18 : signed(12 DOWNTO 0);
    VARIABLE add_cast_19 : signed(13 DOWNTO 0);
    VARIABLE add_temp_5 : signed(13 DOWNTO 0);
    VARIABLE cast_41 : signed(12 DOWNTO 0);
    VARIABLE sub_cast_15 : signed(12 DOWNTO 0);
    VARIABLE sub_cast_16 : signed(13 DOWNTO 0);
    VARIABLE sub_temp_8 : signed(13 DOWNTO 0);
    VARIABLE cast_42 : signed(12 DOWNTO 0);
    VARIABLE cast_43 : signed(12 DOWNTO 0);
  BEGIN
    --spssa
    FI_SIN_COS_LUT := nc;
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --        Generated by MATLAB 8.1, MATLAB Coder 2.4 and HDL Coder 3.2      %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    cast := resize(n_unsigned & '0', 5);
    sub_cast := resize(j_unsigned & '0', 5);
    sub_cast_0 := signed(resize(sub_cast, 7));
    sub_temp := sub_cast_0 - 1;
    IF sub_temp(6) = '1' THEN 
      cast_0 := "000000";
    ELSE 
      cast_0 := unsigned(sub_temp(5 DOWNTO 0));
    END IF;
    cast_1 := cast_0 & '0' & '0' & '0' & '0' & '0';
    cast_2 := resize(n_unsigned & '0', 5);
    IF cast = 0 THEN 
      div_temp := c_divbyzero_p_0;
    ELSE 
      div_temp := cast_1 / cast_2;
    END IF;
    sub_temp_0 := resize(i_unsigned, 4) - 1;
    mul_temp := 13 * sub_temp_0;
    cast_3 := mul_temp(5 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
    cast_4 := div_temp(4 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
    mul_temp_0 := cast_3 * cast_4;
    t3 := mul_temp_0(27 DOWNTO 14);
    inputValue := resize(t3, 16);
    cast_5 := inputValue & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
    iA := cast_5;
    inputvalue_0 := resize(t3, 16);
    cast_6 := inputvalue_0 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
    ia_0 := cast_6;
    IF i_unsigned = 1 THEN 
      IF n_unsigned = 0 THEN 
        div_temp_0 := C_divbyzero_p;
      ELSE 
        div_temp_0 := One / n_unsigned;
      END IF;
      c1 := resize(div_temp_0, 5);
      y := to_unsigned(0, 3);

      FOR i1 IN 2 DOWNTO 0 LOOP
        cast_9(i1) := unsigned(to_signed(i1, 32)(7 DOWNTO 0));
        sll_temp(i1) := to_unsigned(1, 3) sll to_integer(cast_9(i1));
        ytemp := y OR sll_temp(i1);
        mul_temp_5(i1) := ytemp * ytemp;
        cast_14(i1) := resize(c1, 6);
        IF mul_temp_5(i1) <= cast_14(i1) THEN 
          y := ytemp;
        END IF;
      END LOOP;

      add_cast_1 := resize(y, 4);
      add_temp := add_cast_1 + 1;
      IF add_temp(3) /= '0' THEN 
        ytempPlusLsb := "111";
      ELSE 
        ytempPlusLsb := add_temp(2 DOWNTO 0);
      END IF;
      mul_temp_3 := ytempPlusLsb * ytempPlusLsb;
      sub_cast_4 := signed(resize(mul_temp_3, 7));
      sub_cast_5 := signed(resize(c1, 7));
      sub_temp_3 := sub_cast_4 - sub_cast_5;
      IF sub_temp_3(6) = '1' THEN 
        cast_12 := "000000";
      ELSE 
        cast_12 := unsigned(sub_temp_3(5 DOWNTO 0));
      END IF;
      sub_cast_6 := signed(resize(c1, 7));
      mul_temp_4 := y * y;
      sub_cast_7 := signed(resize(mul_temp_4, 7));
      sub_temp_4 := sub_cast_6 - sub_cast_7;
      IF sub_temp_4(6) = '1' THEN 
        cast_13 := "000000";
      ELSE 
        cast_13 := unsigned(sub_temp_4(5 DOWNTO 0));
      END IF;
      IF cast_12 < cast_13 THEN 
        NULL;
      ELSE 
        ytempPlusLsb := y;
      END IF;
      IF y < 7 THEN 
        y := ytempPlusLsb;
      END IF;
      IF c1 <= 0 THEN 
        y := to_unsigned(0, 3);
      END IF;
      IF (inputValue > 6434) OR (inputValue < 0) THEN 
        div_temp_2 := iA / 421657428;
        sub_cast_12 := resize(div_temp_2 * 421657428, 32);
        sub_temp_6 := iA - sub_cast_12;
        tmp_1 := sub_temp_6(28 DOWNTO 13);
      ELSE 
        tmp_1 := inputValue(12 DOWNTO 0) & '0' & '0' & '0';
      END IF;
      cast_27 := tmp_1;
      mul_temp_10 := unsigned'("10100010111110010110010100100100") * cast_27;
      cast_28 := mul_temp_10(46 DOWNTO 15);
      fullscaleindex_0 := cast_28(31 DOWNTO 16);
      idxlutlozero_0 := fullscaleindex_0(15 DOWNTO 8);
      add_cast_10 := idxlutlozero_0;
      add_cast_11 := signed(resize(add_cast_10, 16));
      idxlutloaddr_0 := add_cast_11 + 1;
      cast_30 := signed(resize(fullscaleindex_0(7 DOWNTO 0), 9));
      add_cast_12 := idxlutlozero_0 + 1;
      add_cast_13 := signed(resize(add_cast_12, 16));
      sub_cast_13 := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_13 + 1, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      sub_cast_14 := resize(FI_SIN_COS_LUT(to_integer(resize(idxlutloaddr_0, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      sub_temp_7 := sub_cast_13 - sub_cast_14;
      mul_temp_11 := cast_30 * sub_temp_7;
      cast_31 := mul_temp_11(39 DOWNTO 8);
      temp_0 := cast_31(30 DOWNTO 15);
      mul_temp_12 := 6 * y;
      cast_32 := signed(resize(mul_temp_12, 7));
      add_cast_14 := resize(FI_SIN_COS_LUT(to_integer(resize(idxlutloaddr_0, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_cast_15 := resize(temp_0 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_temp_3 := add_cast_14 + add_cast_15;
      cast_33 := add_temp_3(30 DOWNTO 15);
      mul_temp_13 := cast_32 * cast_33;
      IF (mul_temp_13(22) = '0') AND (mul_temp_13(21) /= '0') THEN 
        cast_34 := "0111111111111111111111";
      ELSIF (mul_temp_13(22) = '1') AND (mul_temp_13(21) /= '1') THEN 
        cast_34 := "1000000000000000000000";
      ELSE 
        cast_34 := mul_temp_13(21 DOWNTO 0);
      END IF;
      cast_35 := signed(resize(m_unsigned, 9));
      mul_temp_14 := cast_34 * cast_35;
      IF (mul_temp_14(30) = '0') AND (mul_temp_14(29) /= '0') THEN 
        c_0 := "011111111111111111111111111111";
      ELSIF (mul_temp_14(30) = '1') AND (mul_temp_14(29) /= '1') THEN 
        c_0 := "100000000000000000000000000000";
      ELSE 
        c_0 := mul_temp_14(29 DOWNTO 0);
      END IF;
      mul_temp_15 := 6 * y;
      cast_36 := signed(resize(mul_temp_15, 7));
      add_cast_16 := resize(FI_SIN_COS_LUT(to_integer(resize(idxlutloaddr_0, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_cast_17 := resize(temp_0 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_temp_4 := add_cast_16 + add_cast_17;
      cast_37 := add_temp_4(30 DOWNTO 15);
      mul_temp_16 := cast_36 * cast_37;
      IF (mul_temp_16(22) = '0') AND (mul_temp_16(21) /= '0') THEN 
        cast_38 := "0111111111111111111111";
      ELSIF (mul_temp_16(22) = '1') AND (mul_temp_16(21) /= '1') THEN 
        cast_38 := "1000000000000000000000";
      ELSE 
        cast_38 := mul_temp_16(21 DOWNTO 0);
      END IF;
      cast_39 := signed(resize(m_unsigned, 9));
      mul_temp_17 := cast_38 * cast_39;
      IF (mul_temp_17(30) = '0') AND (mul_temp_17(29) /= '0') THEN 
        cast_40 := "011111111111111111111111111111";
      ELSIF (mul_temp_17(30) = '1') AND (mul_temp_17(29) /= '1') THEN 
        cast_40 := "100000000000000000000000000000";
      ELSE 
        cast_40 := mul_temp_17(29 DOWNTO 0);
      END IF;
      IF cast_40 < 0 THEN 
        sub_cast_15 := (resize(c_0(29 DOWNTO 18), 13)) + ('0' & (c_0(17) OR c_0(16) OR c_0(15) OR c_0(14) OR c_0(13) OR c_0(12) OR c_0(11) OR c_0(10) OR c_0(9) OR c_0(8) OR c_0(7) OR c_0(6) OR c_0(5) OR c_0(4) OR c_0(3) OR c_0(2) OR c_0(1) OR c_0(0)));
        sub_cast_16 := resize(sub_cast_15, 14);
        sub_temp_8 := sub_cast_16 - 1;
        IF (sub_temp_8(13) = '0') AND (sub_temp_8(12) /= '0') THEN 
          cast_42 := "0111111111111";
        ELSIF (sub_temp_8(13) = '1') AND (sub_temp_8(12) /= '1') THEN 
          cast_42 := "1000000000000";
        ELSE 
          cast_42 := sub_temp_8(12 DOWNTO 0);
        END IF;
        cast_43 := (resize(cast_42(12 DOWNTO 1), 13)) + ('0' & cast_42(0));
        IF (cast_43(12) = '0') AND (cast_43(11) /= '0') THEN 
          tmp_2 := "011111111111";
        ELSIF (cast_43(12) = '1') AND (cast_43(11) /= '1') THEN 
          tmp_2 := "100000000000";
        ELSE 
          tmp_2 := cast_43(11 DOWNTO 0);
        END IF;
      ELSE 
        add_cast_18 := resize(c_0(29 DOWNTO 18), 13);
        add_cast_19 := resize(add_cast_18, 14);
        add_temp_5 := add_cast_19 + 1;
        IF (add_temp_5(13) = '0') AND (add_temp_5(12) /= '0') THEN 
          cast_41 := "0111111111111";
        ELSIF (add_temp_5(13) = '1') AND (add_temp_5(12) /= '1') THEN 
          cast_41 := "1000000000000";
        ELSE 
          cast_41 := add_temp_5(12 DOWNTO 0);
        END IF;
        IF (cast_41(12) = '0') AND (cast_41(11 DOWNTO 1) = "11111111111") THEN 
          tmp_2 := "011111111111";
        ELSE 
          tmp_2 := cast_41(12 DOWNTO 1);
        END IF;
      END IF;
      d_tmp <= tmp_2(7 DOWNTO 0);
    ELSE 
      IF (inputvalue_0 > 6434) OR (inputvalue_0 < 0) THEN 
        div_temp_1 := ia_0 / 421657428;
        sub_cast_1 := resize(div_temp_1 * 421657428, 32);
        sub_temp_1 := ia_0 - sub_cast_1;
        tmp := sub_temp_1(28 DOWNTO 13);
      ELSE 
        tmp := inputvalue_0(12 DOWNTO 0) & '0' & '0' & '0';
      END IF;
      cast_7 := tmp;
      mul_temp_1 := unsigned'("10100010111110010110010100100100") * cast_7;
      cast_8 := mul_temp_1(46 DOWNTO 15);
      fullScaleIndex := cast_8(31 DOWNTO 16);
      idxLUTLoZero := fullScaleIndex(15 DOWNTO 8);
      add_cast := idxLUTLoZero;
      add_cast_0 := signed(resize(add_cast, 16));
      idxLUTLoAddr := add_cast_0 + 1;
      cast_10 := signed(resize(fullScaleIndex(7 DOWNTO 0), 9));
      add_cast_2 := idxLUTLoZero + 1;
      add_cast_3 := signed(resize(add_cast_2, 16));
      sub_cast_2 := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_3 + 1, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      sub_cast_3 := resize(FI_SIN_COS_LUT(to_integer(resize(idxLUTLoAddr, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      sub_temp_2 := sub_cast_2 - sub_cast_3;
      mul_temp_2 := cast_10 * sub_temp_2;
      cast_11 := mul_temp_2(39 DOWNTO 8);
      temp := cast_11(30 DOWNTO 15);
      add_cast_4 := resize(FI_SIN_COS_LUT(to_integer(resize(idxLUTLoAddr, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_cast_5 := resize(temp & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_temp_0 := add_cast_4 + add_cast_5;
      cast_15 := add_temp_0(30 DOWNTO 15);
      mul_temp_6 := 23170 * cast_15;
      cast_16 := signed(resize(m_unsigned, 9));
      mul_temp_7 := mul_temp_6 * cast_16;
      IF (mul_temp_7(40) = '0') AND (mul_temp_7(39) /= '0') THEN 
        c := X"7FFFFFFFFF";
      ELSIF (mul_temp_7(40) = '1') AND (mul_temp_7(39) /= '1') THEN 
        c := X"8000000000";
      ELSE 
        c := mul_temp_7(39 DOWNTO 0);
      END IF;
      add_cast_6 := resize(FI_SIN_COS_LUT(to_integer(resize(idxLUTLoAddr, 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_cast_7 := resize(temp & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
      add_temp_1 := add_cast_6 + add_cast_7;
      cast_17 := add_temp_1(30 DOWNTO 15);
      mul_temp_8 := 23170 * cast_17;
      cast_18 := signed(resize(m_unsigned, 9));
      mul_temp_9 := mul_temp_8 * cast_18;
      IF (mul_temp_9(40) = '0') AND (mul_temp_9(39) /= '0') THEN 
        cast_19 := X"7FFFFFFFFF";
      ELSIF (mul_temp_9(40) = '1') AND (mul_temp_9(39) /= '1') THEN 
        cast_19 := X"8000000000";
      ELSE 
        cast_19 := mul_temp_9(39 DOWNTO 0);
      END IF;
      IF cast_19 < to_signed(0, 40) THEN 
        sub_cast_8 := (resize(c(39 DOWNTO 29), 12)) + ('0' & (c(28) OR c(27) OR c(26) OR c(25) OR c(24) OR c(23) OR c(22) OR c(21) OR c(20) OR c(19) OR c(18) OR c(17) OR c(16) OR c(15) OR c(14) OR c(13) OR c(12) OR c(11) OR c(10) OR c(9) OR c(8) OR c(7) OR c(6) OR c(5) OR c(4) OR c(3) OR c(2) OR c(1) OR c(0)));
        sub_cast_9 := resize(sub_cast_8, 13);
        sub_temp_5 := sub_cast_9 - 1;
        IF (sub_temp_5(12) = '0') AND (sub_temp_5(11) /= '0') THEN 
          cast_21 := "011111111111";
        ELSIF (sub_temp_5(12) = '1') AND (sub_temp_5(11) /= '1') THEN 
          cast_21 := "100000000000";
        ELSE 
          cast_21 := sub_temp_5(11 DOWNTO 0);
        END IF;
        cast_22 := (resize(cast_21(11 DOWNTO 1), 12)) + ('0' & cast_21(0));
        IF (cast_22(11) = '0') AND (cast_22(10) /= '0') THEN 
          tmp_0 := "01111111111";
        ELSIF (cast_22(11) = '1') AND (cast_22(10) /= '1') THEN 
          tmp_0 := "10000000000";
        ELSE 
          tmp_0 := cast_22(10 DOWNTO 0);
        END IF;
      ELSE 
        add_cast_8 := resize(c(39 DOWNTO 29), 12);
        add_cast_9 := resize(add_cast_8, 13);
        add_temp_2 := add_cast_9 + 1;
        IF (add_temp_2(12) = '0') AND (add_temp_2(11) /= '0') THEN 
          cast_20 := "011111111111";
        ELSIF (add_temp_2(12) = '1') AND (add_temp_2(11) /= '1') THEN 
          cast_20 := "100000000000";
        ELSE 
          cast_20 := add_temp_2(11 DOWNTO 0);
        END IF;
        IF (cast_20(11) = '0') AND (cast_20(10 DOWNTO 1) = "1111111111") THEN 
          tmp_0 := "01111111111";
        ELSE 
          tmp_0 := cast_20(11 DOWNTO 1);
        END IF;
      END IF;
      d_tmp <= tmp_0(7 DOWNTO 0);
    END IF;
    sub_cast_10 := '0' & '0' & '0' & x3;
    cast_23 := resize(resize(x0_unsigned, 4) - sub_cast_10, 2);
    cast_24 := signed(resize(cast_23, 16));
    d1 := unsigned(cast_24(1 DOWNTO 0));
    sub_cast_11 := '0' & '0' & '0' & x2;
    cast_25 := resize(resize(x1_unsigned, 4) - sub_cast_11, 2);
    cast_26 := signed(resize(cast_25, 16));
    d2 := unsigned(cast_26(1 DOWNTO 0));
    hdldct_FixPt_FI_SIN_COS_LUT <= FI_SIN_COS_LUT;
    Y1_tmp <= resize(resize(d2 sll 1, 4) + resize(d2, 4), 8);
    cast_29 := resize(resize(d1 sll 1, 4) + resize(d1, 4), 9);
    Y3_tmp <= signed(cast_29(7 DOWNTO 0));
  END PROCESS hdldct_FixPt_1_output;


  d <= std_logic_vector(d_tmp);

  Y1 <= std_logic_vector(Y1_tmp);

  Y3 <= std_logic_vector(Y3_tmp);

  ce_out <= clk_enable;

END rtl;

